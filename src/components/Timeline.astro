---
// ElegantUseCaseTimeline.astro
---

<div class="use-cases-container">
  <h2 class="heading">Use <span class="accent">Cases</span></h2>
  <p class="subtitle">The IoT solution protectQube can be used across various industries.</p>
  
  <div class="timeline">
    <div class="timeline-items">
      <!-- ATM Security -->
      <div class="timeline-item" data-usecase="atm">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
              <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
            </svg>
          </div>
          <div class="content">
            <span class="badge">Security</span>
            <h3>ATM Security Monitoring</h3>
            <p>Comprehensive monitoring solution for ATMs located in widespread and difficult-to-reach locations, ensuring optimal security and functionality.</p>
            <span class="tag">Banking</span>
          </div>
        </div>
      </div>
      
      <!-- Building Environment -->
      <div class="timeline-item" data-usecase="building">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
              <line x1="8" y1="21" x2="16" y2="21"></line>
              <line x1="12" y1="17" x2="12" y2="21"></line>
            </svg>
          </div>
          <div class="content">
            <span class="badge">Environment</span>
            <h3>Building Environment Monitoring</h3>
            <p>Real-time monitoring of building conditions including temperature, humidity, air quality, and occupancy for optimal environmental control.</p>
            <span class="tag">Property Management</span>
          </div>
        </div>
      </div>
      
      <!-- Server Environment -->
      <div class="timeline-item" data-usecase="server">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect>
              <rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect>
              <line x1="6" y1="6" x2="6.01" y2="6"></line>
              <line x1="6" y1="18" x2="6.01" y2="18"></line>
            </svg>
          </div>
          <div class="content">
            <span class="badge">IT</span>
            <h3>Server Environment Monitoring</h3>
            <p>24/7 uninterrupted monitoring of server rooms and data centers, tracking temperature, humidity, power consumption, and security alerts.</p>
            <span class="tag">Data Centers</span>
          </div>
        </div>
      </div>
      
      <!-- Site Monitoring -->
      <div class="timeline-item" data-usecase="site">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
              <circle cx="12" cy="10" r="3"></circle>
            </svg>
          </div>
          <div class="content">
            <span class="badge">Location</span>
            <h3>Site Monitoring</h3>
            <p>Remote monitoring of construction sites, industrial facilities, and remote locations with real-time alerts and comprehensive reporting.</p>
            <span class="tag">Remote Management</span>
          </div>
        </div>
      </div>
      
      <!-- Manufacturing -->
      <div class="timeline-item" data-usecase="manufacture">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
              <circle cx="9" cy="7" r="4"></circle>
              <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
            </svg>
          </div>
          <div class="content">
            <span class="badge">Industry</span>
            <h3>Manufacturing</h3>
            <p>Smart monitoring solutions for manufacturing equipment and production lines, improving operational efficiency and reducing downtime.</p>
            <span class="tag">Production</span>
          </div>
        </div>
      </div>
      
      <!-- Additional Applications -->
      <div class="timeline-item" data-usecase="etc">
        <div class="card">
          <div class="icon-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="14.31" y1="8" x2="20.05" y2="17.94"></line>
              <line x1="9.69" y1="8" x2="21.17" y2="8"></line>
              <line x1="7.38" y1="12" x2="13.12" y2="2.06"></line>
              <line x1="9.69" y1="16" x2="3.95" y2="6.06"></line>
              <line x1="14.31" y1="16" x2="2.83" y2="16"></line>
              <line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>
            </svg>
          </div>
          <div class="content">
            <span class="badge">Versatile</span>
            <h3>Additional Applications</h3>
            <p>protectQube's versatile IoT platform can be customized for various applications including retail analytics, smart agriculture, and healthcare.</p>
            <span class="tag">Customizable</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Modern, elegant styling with minimalist approach */
  .use-cases-container {
    max-width: 1100px;
    margin: 0 auto;
    padding: 3rem 1rem;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    color: #334155;
    --primary: #ff7a00;
    --primary-light: #ff9900;
    --primary-dark: #e06000;
    --primary-gradient: linear-gradient(135deg, var(--primary-dark), var(--primary), var(--primary-light));
    --shadow-sm: 0 1px 2px rgba(0,0,0,0.05);
    --shadow-md: 0 4px 6px -1px rgba(0,0,0,0.05), 0 2px 4px -1px rgba(0,0,0,0.05);
    --shadow-lg: 0 10px 15px -3px rgba(0,0,0,0.05), 0 4px 6px -2px rgba(0,0,0,0.05);
    --shadow-glow: 0 0 20px rgba(255, 122, 0, 0.15);
    --transition-smooth: all 0.5s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .heading {
    font-size: 2.5rem;
    font-weight: 800;
    text-align: center;
    margin-bottom: 0.5rem;
    letter-spacing: -0.02em;
  }

  .subtitle {
    text-align: center;
    font-size: 1.125rem;
    color: #64748b;
    margin-bottom: 3rem;
  }

  .accent {
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  /* Timeline structure - no side lines, more elegant */
  .timeline {
    position: relative;
    padding: 0;
    max-width: 900px;
    margin: 0 auto;
  }

  /* Timeline items */
  .timeline-items {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: 4rem;
  }

  .timeline-item {
    position: relative;
    opacity: 0;
    transform: translateY(30px);
    transition: var(--transition-smooth);
    will-change: transform, opacity;
  }

  .timeline-item.active {
    opacity: 1;
    transform: translateY(0);
  }

  /* Card design - more elegant and interactive */
  .card {
    background: white;
    border-radius: 1rem;
    box-shadow: var(--shadow-md);
    transition: var(--transition-smooth);
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
  }

  .card:hover {
    box-shadow: var(--shadow-lg), var(--shadow-glow);
    transform: translateY(-5px);
  }

  .icon-wrapper {
    background: var(--primary-gradient);
    color: white;
    padding: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 80px;
  }

  .icon-wrapper svg {
    width: 32px;
    height: 32px;
    stroke: white;
    transition: var(--transition-smooth);
  }

  .card:hover .icon-wrapper svg {
    transform: scale(1.1);
  }

  .content {
    padding: 1.5rem 2rem;
    flex: 1;
    position: relative;
  }

  .badge {
    display: inline-block;
    background: var(--primary-gradient);
    color: white;
    font-weight: 600;
    padding: 0.2rem 0.75rem;
    border-radius: 999px;
    font-size: 0.75rem;
    box-shadow: var(--shadow-sm);
    margin-bottom: 0.5rem;
  }

  .card h3 {
    font-size: 1.25rem;
    font-weight: 700;
    margin: 0.5rem 0;
    color: var(--primary-dark);
    transition: var(--transition-smooth);
  }

  .card:hover h3 {
    color: var(--primary);
  }

  .card p {
    font-size: 0.95rem;
    line-height: 1.5;
    margin-bottom: 1rem;
    color: #475569;
  }

  .tag {
    font-size: 0.75rem;
    font-weight: 600;
    padding: 0.2rem 0.6rem;
    background-color: rgba(255, 122, 0, 0.1);
    border-radius: 999px;
    color: var(--primary);
    display: inline-block;
  }

  /* Staggered animation for cards */
  .timeline-item:nth-child(1) { transition-delay: 0.1s; }
  .timeline-item:nth-child(2) { transition-delay: 0.2s; }
  .timeline-item:nth-child(3) { transition-delay: 0.3s; }
  .timeline-item:nth-child(4) { transition-delay: 0.4s; }
  .timeline-item:nth-child(5) { transition-delay: 0.5s; }
  .timeline-item:nth-child(6) { transition-delay: 0.6s; }

  /* Even more elegant with alternating styles */
  .timeline-item:nth-child(even) .card {
    flex-direction: row-reverse;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .heading {
      font-size: 2rem;
    }
    
    .card {
      flex-direction: column !important;
    }
    
    .icon-wrapper {
      width: 100%;
      padding: 1.5rem;
      min-height: 80px;
    }
    
    .content {
      padding: 1.5rem;
    }
    
    .timeline-items {
      gap: 3rem;
    }
  }

  @media (max-width: 480px) {
    .heading {
      font-size: 1.75rem;
    }
    
    .card h3 {
      font-size: 1.1rem;
    }
    
    .card p {
      font-size: 0.875rem;
    }
    
    .icon-wrapper {
      min-height: 60px;
    }
    
    .icon-wrapper svg {
      width: 24px;
      height: 24px;
    }
  }
</style>

<script>
  export function setupElegantTimeline() {
    const timelineItems = document.querySelectorAll('.timeline-item');
    
    if (!timelineItems.length) return;
    
    // Function to check if element is in viewport
    function isInViewport(element, offset = 0.8) {
      const rect = element.getBoundingClientRect();
      return (
        rect.top <= window.innerHeight * offset
      );
    }
    
    // Update timeline state with smooth animations
    const updateTimeline = () => {
      timelineItems.forEach((item) => {
        if (isInViewport(item)) {
          if (!item.classList.contains('active')) {
            // Add the active class
            item.classList.add('active');
            
            // Add interactive hover effect
            item.addEventListener('mouseenter', () => {
              const otherItems = [...timelineItems].filter(i => i !== item);
              otherItems.forEach(other => {
                other.style.opacity = '0.7';
                other.style.transform = 'scale(0.98)';
              });
            });
            
            item.addEventListener('mouseleave', () => {
              timelineItems.forEach(i => {
                i.style.opacity = '';
                i.style.transform = '';
              });
            });
          }
        } else if (window.scrollY === 0) {
          // Reset on scroll to top
          item.classList.remove('active');
        }
      });
    };
    
    // Initial check to activate visible items immediately
    requestAnimationFrame(() => {
      updateTimeline();
    });
    
    // Add scroll event listener with optimized performance
    let ticking = false;
    window.addEventListener('scroll', () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateTimeline();
          ticking = false;
        });
        ticking = true;
      }
    }, { passive: true });
    
    // Handle resize events
    window.addEventListener('resize', updateTimeline, { passive: true });
    
    // Use Intersection Observer for better performance
    if ('IntersectionObserver' in window) {
      const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.2,
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('active');
            
            // Add a subtle animation to draw attention
            entry.target.style.transition = 'var(--transition-smooth)';
            
            // Stop observing after activation
            observer.unobserve(entry.target);
          }
        });
      }, observerOptions);
      
      timelineItems.forEach(item => {
        observer.observe(item);
      });
    }
    
    // Add click interactivity
    timelineItems.forEach(item => {
      item.addEventListener('click', () => {
        // Focus effect - highlight the clicked item
        timelineItems.forEach(i => {
          i.classList.remove('focused');
          i.style.transform = '';
        });
        
        item.classList.add('focused');
        item.style.transform = 'scale(1.02)';
        
        // Smooth scroll to the item
        item.scrollIntoView({
          behavior: 'smooth',
          block: 'center'
        });
      });
    });
  }
  
  // Initialize timeline on various page lifecycle events
  document.addEventListener('astro:page-load', () => {
    setupElegantTimeline();
  });
  
  document.addEventListener('DOMContentLoaded', () => {
    setupElegantTimeline();
  });
  
  document.addEventListener('astro:after-swap', () => {
    setupElegantTimeline();
  });
</script>